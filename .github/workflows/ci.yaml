name: Continuous Integration

on:
  push:
    branches:
      - 'devops-sre-engineer'
      - '!master'
env:
  image: nginx
  tag: 1.19

jobs:
  image_build_and_scan:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          ref: 'devops-sre-engineer'
      - name: Docker version
        run: docker version
      - name: build image       
        run: |
          docker build . -t  $image:$tag
      - name: list images     
        run: |
          docker images $image:$tag
      - name: Build and scan image
        uses: ISID/build-and-scan-image@main
        with:
          tag: "$image:$tag"  # Image name and optionally tag in "name:tag" format
          path: "."  # Path to base directory to run `docker build` command

  # StatefulSet:
  #   needs: [image_build_and_scan]
  #   runs-on: ubuntu-latest
  #   env:
  #     AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID_DEV }}
  #     AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY_DEV }}
  #     AWS_DEFAULT_REGION: 'us-east-1'
  #     TF_VAR_db_host: ${{ secrets.DB_HOST }}
  #     TF_VAR_db_database: ${{ secrets.DB_DATABASE }}
  #     TF_VAR_db_username: ${{ secrets.DB_USERNAME }}
  #     TF_VAR_db_password: ${{ secrets.DB_PASSWORD }}
  #     TF_VAR_mail_username: ${{ secrets.MAIL_USERNAME }}
  #     TF_VAR_mail_password: ${{ secrets.MAIL_PASSWORD }}
  #     TF_VAR_aws_access_key_id: ${{ secrets.AWS_ACCESS_KEY_ID }}
  #     TF_VAR_aws_secret_access_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  #     TF_VAR_aws_bucket: ${{ secrets.AWS_BUCKET }}
  #     TF_VAR_aws_url: ${{ secrets.AWS_URL }}
  #     TF_VAR_aws_s3_url: ${{ secrets.AWS_S3_URL }}
  #     TF_VAR_rollbar_access_token: ${{ secrets.ROLLBAR_ACCESS_TOKEN }}
  #   steps:
  #     - uses: actions/checkout@v3
  #       with:
  #         ref: 'github-actions'
  #     - name: add ssh key for git@github.com:hellomainland/tf-modules.git       
  #       run: |
  #         mkdir -p ~/.ssh && touch ~/.ssh/id_rsa
  #         echo "${{ secrets.HELLOMAINLAND_TF_MODULES }}" > ~/.ssh/id_rsa
  #         chmod 400 ~/.ssh/id_rsa
  #     - name: create app and nginx images && push into ecr
  #       run: |
  #         cd IaaC
  #         ./terraform init
  #         ./terraform output
  #         export app_repo=$(./terraform output --raw admin_portal_api_app_docker_registry_url)
  #         export nginx_repo=$(./terraform output --raw admin_portal_nginx_docker_registry_url)
  #         aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin 078588486142.dkr.ecr.us-east-1.amazonaws.com
  #         cd $GITHUB_WORKSPACE
  #         docker build . --build-arg user=ec2-user --build-arg uid=1000 -f ./docker.images/app/Dockerfile -t "$app_repo:latest"
  #         docker push "$app_repo:latest"
  #         docker build . -f ./docker.images/nginx/Dockerfile -t "$nginx_repo:latest"
  #         docker push "$nginx_repo:latest"

  # create_infrastructure:
  #   needs: [push_images]
  #   runs-on: ubuntu-latest
  #   env:
  #     AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID_DEV }}
  #     AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY_DEV }}
  #     AWS_DEFAULT_REGION: 'us-east-1'
  #     TF_VAR_db_host: ${{ secrets.DB_HOST }}
  #     TF_VAR_db_database: ${{ secrets.DB_DATABASE }}
  #     TF_VAR_db_username: ${{ secrets.DB_USERNAME }}
  #     TF_VAR_db_password: ${{ secrets.DB_PASSWORD }}
  #     TF_VAR_mail_username: ${{ secrets.MAIL_USERNAME }}
  #     TF_VAR_mail_password: ${{ secrets.MAIL_PASSWORD }}
  #     TF_VAR_aws_access_key_id: ${{ secrets.AWS_ACCESS_KEY_ID }}
  #     TF_VAR_aws_secret_access_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  #     TF_VAR_aws_bucket: ${{ secrets.AWS_BUCKET }}
  #     TF_VAR_aws_url: ${{ secrets.AWS_URL }}
  #     TF_VAR_aws_s3_url: ${{ secrets.AWS_S3_URL }}
  #     TF_VAR_rollbar_access_token: ${{ secrets.ROLLBAR_ACCESS_TOKEN }}
  #   steps:
  #     - uses: actions/checkout@v3
  #       with:
  #         ref: 'github-actions'
  #     - name: add ssh key for git@github.com:hellomainland/tf-modules.git       
  #       run: |
  #         mkdir -p ~/.ssh && touch ~/.ssh/id_rsa
  #         echo "${{ secrets.HELLOMAINLAND_TF_MODULES }}" > ~/.ssh/id_rsa
  #         chmod 400 ~/.ssh/id_rsa
  #     - name: terraform validations
  #       run: |
  #         cd IaaC
  #         ./terraform init
  #         ./terraform plan
  #     - name: create path mapping, tg, ecs-task, codedeploy, cw log group
  #       run: |
  #         cd IaaC
  #         ./terraform apply --auto-approve -target=module.create_dns_config -target=module.ecs_cluster -target=module.admin_portal_api_ecs_task -target=module.admin_portal_api_ecs_service -target=module.admin_portal_api_code_deploy -target=module.admin_portal_api_app_cw_log_group -target=module.admin_portal_api_nginx_cw_log_group 
  #         ./terraform output

  # deployment:
  #   needs: [create_infrastructure]
  #   runs-on: ubuntu-latest
  #   env:
  #     AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID_DEV }}
  #     AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY_DEV }}
  #     AWS_DEFAULT_REGION: 'us-east-1'
  #     TF_VAR_db_host: ${{ secrets.DB_HOST }}
  #     TF_VAR_db_database: ${{ secrets.DB_DATABASE }}
  #     TF_VAR_db_username: ${{ secrets.DB_USERNAME }}
  #     TF_VAR_db_password: ${{ secrets.DB_PASSWORD }}
  #     TF_VAR_mail_username: ${{ secrets.MAIL_USERNAME }}
  #     TF_VAR_mail_password: ${{ secrets.MAIL_PASSWORD }}
  #     TF_VAR_aws_access_key_id: ${{ secrets.AWS_ACCESS_KEY_ID }}
  #     TF_VAR_aws_secret_access_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  #     TF_VAR_aws_bucket: ${{ secrets.AWS_BUCKET }}
  #     TF_VAR_aws_url: ${{ secrets.AWS_URL }}
  #     TF_VAR_aws_s3_url: ${{ secrets.AWS_S3_URL }}
  #     TF_VAR_rollbar_access_token: ${{ secrets.ROLLBAR_ACCESS_TOKEN }}
  #   steps:
  #     - uses: actions/checkout@v3
  #       with:
  #         ref: 'github-actions'
  #     - name: add ssh key for git@github.com:hellomainland/tf-modules.git       
  #       run: |
  #         mkdir -p ~/.ssh && touch ~/.ssh/id_rsa
  #         echo "${{ secrets.HELLOMAINLAND_TF_MODULES }}" > ~/.ssh/id_rsa
  #         chmod 400 ~/.ssh/id_rsa
  #     - name: terraform validations
  #       run: |
  #         cd IaaC
  #         ./terraform init
  #         ./terraform plan
  #     - name: create codedeploy appsepc.yml
  #       run: |
  #         cd IaaC
  #         ./terraform apply --auto-approve -target=module.admin_portal_api_codedeploy_appsepec_generate
  #         ./terraform output
  #     - name: install aws cli on runner
  #       run: |
  #         sudo apt-get update
  #         sudo apt-get install awscli -y
  #     - name: copy latest config to s3 bucket
  #       run: |
  #         cd IaaC
  #         aws s3 cp appspec.yml s3://1851-codedeploy-appsepc-development/admin-portal-api/appspec.yml
  #     - name: start blue-green deployment
  #       run: |
  #         aws deploy create-deployment --application-name codedeploy-admin-portal-api-sbx --deployment-group-name dg-admin-portal-api-sbx --description "admin-portal-api-sbx blue/green deployment" --s3-location bucket=1851-codedeploy-appsepc-development,bundleType=YAML,key=admin-portal-api/appspec.yml