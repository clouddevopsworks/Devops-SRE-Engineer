name: Continuous Integration

on:
  push:
    branches:
      - 'devops-sre-engineer'
      - '!master'
env:
  image: nginx
  tag: 1.19

jobs:
  image_build_and_scan:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          ref: 'devops-sre-engineer'
      - name: Docker version
        run: docker version
      - name: install docker scan    
        run: |
          mkdir -p ~/.docker/cli-plugins && \
          curl https://github.com/docker/scan-cli-plugin/releases/latest/download/docker-scan_linux_amd64 -L -s -S -o ~/.docker/cli-plugins/docker-scan &&\
          chmod +x ~/.docker/cli-plugins/docker-scan
      - name: Log in to Docker Hub
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}  
      - name: Build Docker image
        run: |
          docker build . -t  clouddevopsworks/$image:$tag
      - name: docker scan  image
        continue-on-error: true
        run: |
          docker scan $image:$tag --accept-license --severity high --json
      - name: Push Docker image
        run: |
          docker push clouddevopsworks/$image:$tag

  deployment:
    needs: [image_build_and_scan]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          ref: 'devops-sre-engineer'
      - name: install minikube
        run: |
          curl -LO https://storage.googleapis.com/minikube/releases/latest/minikube-linux-amd64
          sudo install minikube-linux-amd64 /usr/local/bin/minikube
      - name: start minukube    
        run: |
          minikube start
          kubectl get po -A
      - name: create host path
        run: |
          sudo mkdir -p /mnt/data
      - name: create pv and pvc
        run: |
          kubectl apply -f pv.yaml
          kubectl apply -f pvc.yaml
          kubectl get pv
          kubectl get pvc
      - name: create StatefulSet
        run: |
          kubectl apply -f statefulset.yaml
          kubectl get statefulsets
          kubectl get svc -o wide